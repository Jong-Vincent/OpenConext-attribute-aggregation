app.version=1.0.1-SNAPSHOT

logging.config=classpath:logback.xml
server.port=8080

server.contextPath=/aa/api

# dev for local development
spring.profiles.active=dev

# surfconext in production
scim.server.environment=test.surfconext

attribute.authorities.config.path=classpath:/attributeAuthorities.yml

# the authorization server url for obtaining a client_credential access_token
authorization.accessToken.url=http://localhost:8889/oauth/token

# Details needed so that we may check tokens presented to us by clients. This application uses them to authenticate via
# Basic authentication with the oAuth server.
authz.checkToken.endpoint.url=http://localhost:8080/oauth/check_token
authz.checkToken.clientId=aaservice
authz.checkToken.secret=secret

oidc.checkToken.endpoint.url=http://localhost:8080/introspect
oidc.checkToken.clientId=https@//aa.localhost.surfconext.nl
oidc.checkToken.secret=secret

checkToken.cache=true
checkToken.cache.duration.milliSeconds=300000

# 8 hours
session-timeout=28800

spring.datasource.url=jdbc:mysql://localhost/aaserver?autoReconnect=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.validation-query=SELECT 1
spring.datasource.testWhileIdle=true

redis.url=redis://localhost:6379/0

attribute.aggregation.user.name=eb
attribute.aggregation.user.password=secret

metadata.username=metadata.client
metadata.password=secret
metadata.refresh.minutes=10
metadata.spRemotePath=https://multidata.test.surfconext.nl/service-providers.json

# 5 minutes
aggregate.cache.duration.milliseconds=300000

endpoints.enabled=false
endpoints.health.enabled=true
endpoints.info.enabled=true

info.build.artifact=@project.artifactId@
info.build.version=@project.version@

logging.level.aa=DEBUG

#enable for debuggin information

#logging.level.org.springframework.security=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE

